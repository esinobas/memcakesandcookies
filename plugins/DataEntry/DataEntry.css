@CHARSET "UTF-8";

.DataEntryWindow-Hide{
 
   visibility: hidden;
}

.DataEntryWindow-Show{
 
   visibility: visible;
}

.DataEntryBackground{
 
   width: 100%;
   height: 200%;
   z-index: 65539;
   
   /* The following properties must be modified for custom the window back */
   background-color: white;
   opacity: 0.7;
}


.DataEntryWindow-Tittle{
   
   color: white;
   background-color: #ff6600;
   height: 30px;
   padding: 5px 2px;
   /* if the following values are changed, you must change the 
   .DataEntryWindow border-radius value also. */
   border-radius: 15px 15px 0px 0px;
}

.DataEntryWindow{
 
   font-size: inherit;
   position: absolute;
   top: 50%;
   left: 50%;
   z-index: 65540;
   
   /* These properties must be modified to define the window size */
   width: 600px;
   height: 200px;
   /** These properties mush be modified to center the window in the screen.
   The value is equal to width/2 or height/2, respectly.*/
   margin-top: -100px;
   margin-left: -300px;
   
   /* These properties must be modified to define the window borders */
   border-radius: 15px;
   border-width: 1px;
   border-color: #ff6600;
   border-style: solid;
   background-color: white;
   
   
}

.DataEntryFrm{
   height: calc(100% - 30px - 4px); /* The height is calculated, substracting the 
                              DataEntryWindow-Title height plus 2 vertical paddings */
   width: 100%;
   
   padding: 10px 20px;
   
}
.DataEntryRow{
   width: calc(100% - 40px); /* The 40px ara the DataEntryFrm padding 2x 20px. 
                     If that value is modified, then it must be recalculated*/
   background-color: red;
}

.DataEntryLabel, .DataEntryValue{
   float: left;
}

.DataEntryLabel{
 
   width: 200px;
   
   
}
.DataEntryValue{
 
   width: calc(100% - 200px);
   
}
.DataEntryValue input{
   width: 100%;
}